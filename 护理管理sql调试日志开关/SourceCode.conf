
def getOracleDate(text):
    import re
    # oracle日期转换 to_date
    if text is not None:
        oracle_date_pattern = ".*\d\d\d\d-\d+-\d+ \d+:\d+:\d+.\d+.*"
        results = re.findall(oracle_date_pattern, text)
        if len(results) > 0:
            result = results[0]
            if "'" in result:
                result = result.replace(re.findall("\.\d+", result)[0], "")
                return f"to_date({result} , 'yyyy-mm-dd hh24:mi:ss')"
            else:
                result = result.replace(re.findall("\.\d+", result)[0], "")
                return f"to_date('{result}' , 'yyyy-mm-dd hh24:mi:ss')"
    return ""

def getDbTypeList():
    return "oracle,mysql".split(",")

def getParamByType(dbType, param):
    if dbType == "mysql":
        if param.endswith("(Timestamp)"):
            param = param.replace("(Timestamp)", "")
            return f'"{param}"'
        if param.endswith("(String)"):
            param = param.replace("(String)", "")
            return f'"{param}"'
        if param.endswith("(Integer)"):
            param = param.replace("(Integer)", "")
            return f'{param}'
    if dbType == "oracle":
        if param.endswith("(Timestamp)"):
            param = param.replace("(Timestamp)", "")
            return getOracleDate(param)
        if param.endswith("(String)"):
            param = param.replace("(String)", "")
            return f"'{param}'"
        if param.endswith("(Integer)"):
            param = param.replace("(Integer)", "")
            return f'{param}'
    return None
